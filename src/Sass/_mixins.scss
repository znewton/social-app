@function calculateRem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}

@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
}
/**
p {
  @include font-size(14px)
}
 */

@mixin bp-large {
	@media only screen and (max-width: 60em) {
		@content;
	}
}

@mixin bp-medium {
	@media only screen and (max-width: 40em) {
		@content;
	}
}

@mixin bp-small {
	@media only screen and (max-width: 30em) {
		@content;
	}
}
/**
USAGE
.sidebar {
  width: 60%;
  float: left;
  margin: 0 2% 0 0;
  @include bp-small {
    width: 100%;
    float: none;
    margin: 0;
  }
}
*/

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}
	@-ms-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}

@mixin animation($str) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};
}
/**
USAGE
@include keyframes(slide-down) {
  0% { opacity: 1; }
  90% { opacity: 0; }
}
.element {
  width: 100px;
  height: 100px;
  background: black;
  @include animation('slide-down 5s 3');
}
*/

@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
}
/**
USAGE
a {
  color: gray;
  @include transition(color .3s ease);
  &:hover {
    color: black;
  }
}
*/

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}
/**
USAGE
.faded-text {
  @include opacity(0.8);
}
 */

@mixin filter($args...) {
	-webkit-filter: $args;
	filter: $args;
}

@mixin box-shadow($args...) {
	-webkit-box-shadow: $args;
	-moz-box-shadow: $args;
	box-shadow: $args;
}
@mixin border-radius($str) {
	-webkit-border-radius: $str;
	-moz-border-radius: $str;
	border-radius: $str;
}
@mixin linear-gradient($args...) {
  background: $args[1]; /* For browsers that do not support gradients */
  background: -webkit-linear-gradient($args); /* For Safari 5.1 to 6.0 */
  background: -o-linear-gradient($args); /* For Opera 11.1 to 12.0 */
  background: -moz-linear-gradient($args); /* For Firefox 3.6 to 15 */
  background: linear-gradient(to $args); /* Standard syntax */
}
@mixin flex($args) {
	-webkit-flex: $args; /* Safari 6.1+ */
  -ms-flex: $args; /* IE 10 */
  flex: $args;
}
/*Dredit for angle-edge mixin: http://www.hongkiat.com/blog/skewed-edges-css/ */
@mixin angle-edge($pos-top:null, $angle-top:null, $pos-btm:null, $angle-btm:null){
  width: 100%;
  position: relative;
  // background: linear-gradient(to right, rgba(241,231,103,1) 0%, rgba(254,182,69,1) 100%);
  &::before,
  &::after{
    width: 100%;
    height: 100%;
    position: absolute;
    background: inherit;
    z-index: -1;
    transition: ease all .5s;
		border-top: 2px solid rgba($blue, 0.9);
  }

  @if $pos-top{
    &::before{
	    content: '';
      @if $pos-top == 'topleft'{
        top: 0;
        transform-origin: right top;
        transform: skewY($angle-top);
      }
      @if $pos-top == 'topright' {
        top: 0;
        transform-origin: left top;
        transform: skewY(-$angle-top);
      }
    }
  }

  @if $pos-btm{
    &::after{
	    content: '';
      @if $pos-btm == 'bottomleft' {
        bottom: 0;
        transform-origin: right bottom;
        transform: skewY(-$angle-btm);

      }

      @if $pos-btm == 'bottomright' {
        bottom: 0;
        transform-origin: left bottom;
        transform: skewY($angle-btm);
      }
    }
  }
}
@mixin placeholder {
	&::-webkit-input-placeholder { /* Chrome/Opera/Safari */
	  @content;
	}
	&::-moz-placeholder { /* Firefox 19+ */
	  @content;
	}
	&:-ms-input-placeholder { /* IE 10+ */
	  @content;
	}
	&:-moz-placeholder { /* Firefox 18- */
	  @content;
	}
}

%clearfix {
	*zoom: 1;
	&:before, &:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}
/**
USAGE
.container-with-floated-children {
  @extend %clearfix;
}
 */

%visuallyhidden {
	margin: -1px;
	padding: 0;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	clip: rect(0, 0, 0, 0);
	position: absolute;
}
/**
USAGE
<button class="mobile-navigation-trigger">
  <b class="visually-hidden">Open the navigation</b>
  <img src="img/mobile-navigation-icon.svg">
</button>
.visually-hidden {
  @extend %visuallyhidden;
}
 */
%break-words {
	/* These are technically the same, but use both */
	overflow-wrap: break-word;
	word-wrap: break-word;

	/* Adds a hyphen where the word breaks, if supported (No Blink) */
	-ms-hyphens: auto;
	-moz-hyphens: auto;
	-webkit-hyphens: auto;
	hyphens: auto;
}
